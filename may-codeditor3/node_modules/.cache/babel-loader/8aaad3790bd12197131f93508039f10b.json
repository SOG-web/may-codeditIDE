{"ast":null,"code":"import React from'react';import ReactEmoji from'react-emoji';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Notification=function Notification(_ref){var _ref$notification=_ref.notification,text=_ref$notification.text,user=_ref$notification.user,name=_ref.name;var sentByCurrentUser=false;var trimName=name.trim().toLowerCase();if(user===trimName){//if user equals to name that user inputs set whatever \n//is sent by that user to true so that it does the true section in conditional rendering below\nsentByCurrentUser=true;}return sentByCurrentUser?/*#__PURE__*/_jsx(\"div\",{className:\"list-group\",children:/*#__PURE__*/_jsx(\"a\",{className:\"list-group-item list-group-item-action\",\"aria-current\":\"true\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex w-100 justify-content-between\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-1\",children:ReactEmoji.emojify(text)}),/*#__PURE__*/_jsx(\"small\",{children:trimName})]})})}):/*#__PURE__*/_jsx(\"div\",{className:\"list-group\",children:/*#__PURE__*/_jsx(\"a\",{className:\"list-group-item list-group-item-action\",\"aria-current\":\"true\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex w-100 justify-content-between\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-1\",children:ReactEmoji.emojify(text)}),/*#__PURE__*/_jsx(\"small\",{children:user})]})})});};export default Notification;","map":{"version":3,"sources":["C:/Users/Ketik/vscodeProjects/may-codeditIDE/may-codeditor3/src/components/Notification/Notification.js"],"names":["React","ReactEmoji","Notification","notification","text","user","name","sentByCurrentUser","trimName","trim","toLowerCase","emojify"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA0C,4BAAvCC,YAAuC,CAAxBC,IAAwB,mBAAxBA,IAAwB,CAAlBC,IAAkB,mBAAlBA,IAAkB,CAAXC,IAAW,MAAXA,IAAW,CAC3D,GAAIC,CAAAA,iBAAiB,CAAG,KAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAGF,IAAI,CAACG,IAAL,GAAYC,WAAZ,EAAjB,CAEA,GAAGL,IAAI,GAAKG,QAAZ,CAAsB,CAAG;AACrB;AACAD,iBAAiB,CAAG,IAApB,CACH,CAED,MACIA,CAAAA,iBAAiB,cAEb,YAAK,SAAS,CAAC,YAAf,uBACI,UAAG,SAAS,CAAC,wCAAb,CAAsD,eAAa,MAAnE,uBACI,aAAK,SAAS,CAAC,sCAAf,wBACA,UAAG,SAAS,CAAC,MAAb,UAAqBN,UAAU,CAACU,OAAX,CAAmBP,IAAnB,CAArB,EADA,cAEA,uBAAQI,QAAR,EAFA,GADJ,EADJ,EAFa,cAYb,YAAK,SAAS,CAAC,YAAf,uBACI,UAAG,SAAS,CAAC,wCAAb,CAAsD,eAAa,MAAnE,uBACI,aAAK,SAAS,CAAC,sCAAf,wBACA,UAAG,SAAS,CAAC,MAAb,UAAqBP,UAAU,CAACU,OAAX,CAAmBP,IAAnB,CAArB,EADA,cAEA,uBAAQC,IAAR,EAFA,GADJ,EADJ,EAbR,CAuBH,CAjCD,CAmCA,cAAeH,CAAAA,YAAf","sourcesContent":["import React from 'react';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Notification = ({ notification: {text, user}, name }) => {\r\n    let sentByCurrentUser = false;\r\n\r\n    const trimName = name.trim().toLowerCase();\r\n\r\n    if(user === trimName) {  //if user equals to name that user inputs set whatever \r\n        //is sent by that user to true so that it does the true section in conditional rendering below\r\n        sentByCurrentUser = true;\r\n    }\r\n\r\n    return (\r\n        sentByCurrentUser\r\n        ?(            \r\n            <div className=\"list-group\">\r\n                <a className=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                    <p className=\"mb-1\">{ReactEmoji.emojify(text)}</p>\r\n                    <small>{trimName}</small> \r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n        :(\r\n            <div className=\"list-group\">\r\n                <a className=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                    <p className=\"mb-1\">{ReactEmoji.emojify(text)}</p>\r\n                    <small>{user}</small>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Notification;"]},"metadata":{},"sourceType":"module"}