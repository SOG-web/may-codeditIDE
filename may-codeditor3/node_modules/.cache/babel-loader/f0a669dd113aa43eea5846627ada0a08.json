{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ketik\\\\vscodeProjects\\\\may-codeditIDE - Copy\\\\may-codeditor3\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport * as Tone from 'tone';\nimport Members from '../Members/Members';\nimport Notifications from '../Notifications/Notifications';\nimport InfoBar from '../InfoBar/InfoBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = data => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [playing, setPlaying] = useState('');\n  const [users, setUsers] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [flag, setFlag] = useState({\n    error: false,\n    msg: ''\n  });\n  const [code, setCode] = useState('');\n  const [lastedit, setLastEdit] = useState('');\n  const [loading, setLoading] = useState(true);\n  const ENDPOINT = 'https://may-codeditor3.herokuapp.com/'; //'http://localhost:5000/';\n  //Component did mount, destructure data/args from create and join room component\n  //Do socket.io to create and join, accordingly\n\n  useEffect(() => {\n    const {\n      name,\n      room,\n      create\n    } = data;\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n\n    if (create) {\n      //perform create function specified in socket.io for args user and error\n      socket.emit('create', {\n        name,\n        room\n      }, error => {\n        //send name and room\n        setLoading(false);\n\n        if (error) {\n          setFlag({ ...flag,\n            error: true,\n            msg: error\n          });\n        }\n      });\n    } else {\n      socket.emit('join', {\n        name,\n        room\n      }, error => {\n        setLoading(false);\n\n        if (error) {\n          setFlag({ ...flag,\n            error: true,\n            msg: error\n          });\n        }\n      });\n    }\n  }, [ENDPOINT, data]); //if endpoint is  reloaded, do useEffect \n  //Concatenation; set notification and spread in the array, also add the notification from socket.io \n\n  useEffect(() => {\n    socket.on('notification', notification => {\n      setNotifications(notifications => [...notifications, notification]);\n    }); //perform the \n    //socket.on('play', playMsg => {\n    // setPlaying();\n    //})\n    //perform the emit codeMessage from socket.io, then set code and lastedit\n\n    socket.on('codeMessage', message => {\n      setCode(message.text);\n      setLastEdit(message.user);\n    }); //perform roomData function as in socket.io and destructure data to select only 'users' and set into the users array\n\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []); //responsible for passing change in contents of editor; onChange\n\n  const validateInput = value => {\n    socket.emit('sendCode', value);\n  };\n\n  if (flag.error == true) {\n    setTimeout(() => {\n      window.location.href = '/';\n    }, 1000);\n  } //function go\n  //function handlePlaySound() {\n  //  socket.emit(\"play\", { name: \"Test sound 1\", path: audio})\n\n\n  const synth = new Tone.Synth().toDestination();\n  const now = Tone.now();\n\n  function go() {\n    alert('go!'); // polySynth.triggerAttackRelease('C4', '16n');\n    // trigger the attack immediately\n    // synth.triggerAttack(\"C4\", now)\n    // wait one second before triggering the release\n    // synth.triggerRelease(now + 1)\n  } //} //how do i intend to extrapolate tone.js sound sequence\n  //an audio path\n  //if sound works on one window, need to transfer sound payload\n\n\n  const editor = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            marginTop: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3 logincard\",\n            style: {\n              width: '35rem'\n            },\n            children: [\n            /*#__PURE__*/\n\n            /* THIS IS WHERE I WANT TO INCLUDE SOUND CONTROL PANEL OR MOST LIKELY \r\n               ABOVE THE CARD COLUMN UNDER ROW*/\n            //  \n            // onClick={() => handlePlaySound() }\n            _jsxDEV(\"button\", {\n              style: {\n                margin: 10\n              },\n              onClick: \"go()\",\n              children: \"Play \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InfoBar, {\n              room: room,\n              lastedit: lastedit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n              mode: \"javascript\",\n              theme: \"monokai\",\n              value: code,\n              onChange: value => validateInput(value) //onChange it should do validateInput function(which \n              ,\n              style: {\n                width: '100%'\n              } // is to emit sendCode with our aceEditor value)\n              ,\n              setOptions: {\n                enableLiveAutocompletion: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            marginTop: 20,\n            marginLeft: '100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll\",\n              children: /*#__PURE__*/_jsxDEV(Notifications, {\n                notifications: notifications,\n                name: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: \"Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scroll\",\n              children: /*#__PURE__*/_jsxDEV(Members, {\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"btn btn-danger\",\n              href: \"/\",\n              children: \"Leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  };\n\n  const errorOccured = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        style: {\n          width: '500px',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"alert-heading\",\n          children: \"Error!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An error occured, try again.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-0\",\n          children: [flag.msg, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  };\n\n  const loadingScreen = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: '300px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading === true ? loadingScreen() : flag.error === true ? errorOccured() : editor()\n  }, void 0, false);\n};\n\n_s(Chat, \"mC8A/g4ovYn+Al1OGxA4qRkO+W4=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Ketik/vscodeProjects/may-codeditIDE - Copy/may-codeditor3/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","AceEditor","Tone","Members","Notifications","InfoBar","socket","Chat","data","name","setName","room","setRoom","playing","setPlaying","users","setUsers","notifications","setNotifications","flag","setFlag","error","msg","code","setCode","lastedit","setLastEdit","loading","setLoading","ENDPOINT","create","emit","on","notification","message","text","user","validateInput","value","setTimeout","window","location","href","synth","Synth","toDestination","now","go","alert","editor","marginTop","width","margin","enableLiveAutocompletion","marginLeft","textAlign","errorOccured","display","justifyContent","alignItems","height","loadingScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/snippets/javascript\";\r\nimport * as Tone from 'tone'\r\n\r\nimport Members from '../Members/Members';\r\nimport Notifications from '../Notifications/Notifications';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = (data) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [playing, setPlaying] = useState('')\r\n    const [users, setUsers] = useState([]);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [flag, setFlag]= useState({error: false, msg: ''});\r\n    const [code, setCode] = useState('');\r\n    const [lastedit, setLastEdit] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const ENDPOINT =  'https://may-codeditor3.herokuapp.com/' //'http://localhost:5000/';\r\n\r\n    //Component did mount, destructure data/args from create and join room component\r\n    //Do socket.io to create and join, accordingly\r\n\r\n    useEffect(() => {\r\n        const {name, room, create} = data;\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setRoom(room);\r\n        setName(name);\r\n\r\n        if(create){\r\n            //perform create function specified in socket.io for args user and error\r\n            socket.emit('create', { name, room }, (error) => {   //send name and room\r\n                setLoading(false); \r\n                if(error) {\r\n                    setFlag({...flag, error: true, msg: error});\r\n                }\r\n            });\r\n        }\r\n        \r\n        else{\r\n            socket.emit('join', { name, room }, (error) => {\r\n                setLoading(false);\r\n                if(error) { \r\n                  setFlag({...flag, error: true, msg: error});\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [ENDPOINT, data]);   //if endpoint is  reloaded, do useEffect \r\n\r\n    //Concatenation; set notification and spread in the array, also add the notification from socket.io \r\n    useEffect(() => {\r\n        socket.on('notification', notification => {\r\n            setNotifications(notifications => [ ...notifications, notification ]);\r\n        });\r\n\r\n\r\n        //perform the \r\n        //socket.on('play', playMsg => {\r\n           // setPlaying();\r\n        //})\r\n\r\n\r\n        //perform the emit codeMessage from socket.io, then set code and lastedit\r\n        socket.on('codeMessage', message => {\r\n            setCode(message.text);\r\n            setLastEdit(message.user);\r\n        });\r\n        \r\n        //perform roomData function as in socket.io and destructure data to select only 'users' and set into the users array\r\n        socket.on(\"roomData\", ({users}) => {\r\n            setUsers(users);\r\n        });\r\n    }, []);\r\n\r\n    //responsible for passing change in contents of editor; onChange\r\n    const validateInput = (value) => {\r\n        socket.emit('sendCode', value);\r\n    }\r\n\r\n    if(flag.error == true){\r\n        setTimeout(()=> {\r\n            window.location.href='/';\r\n        }, 1000);\r\n    }\r\n\r\n    //function go\r\n    //function handlePlaySound() {\r\n      //  socket.emit(\"play\", { name: \"Test sound 1\", path: audio})\r\n\r\n      const synth = new Tone.Synth().toDestination();\r\n      const now = Tone.now()\r\n     \r\n  \r\n      function go()\r\n      {\r\n           alert('go!');\r\n         \r\n  \r\n          // polySynth.triggerAttackRelease('C4', '16n');\r\n  \r\n           // trigger the attack immediately\r\n    // synth.triggerAttack(\"C4\", now)\r\n          // wait one second before triggering the release\r\n    // synth.triggerRelease(now + 1)\r\n      }\r\n    //} //how do i intend to extrapolate tone.js sound sequence\r\n      //an audio path\r\n\r\n      //if sound works on one window, need to transfer sound payload\r\n    const editor = () => {\r\n        return (\r\n        <div className=\"container\" >\r\n            <div class=\"row\">\r\n                <div className=\"col\" style={{marginTop: 20}}>\r\n                    <div className=\"card p-3 logincard\" style={{width: '35rem'}}>\r\n\r\n                        {/* THIS IS WHERE I WANT TO INCLUDE SOUND CONTROL PANEL OR MOST LIKELY \r\n                            ABOVE THE CARD COLUMN UNDER ROW*/\r\n                            //  \r\n                            // onClick={() => handlePlaySound() }\r\n                            <button style={{margin: 10}} onClick='go()'>Play </button>\r\n                            \r\n                        }\r\n\r\n                        <InfoBar room={room} lastedit={lastedit} />\r\n                        <AceEditor mode=\"javascript\" theme=\"monokai\" value={code} \r\n                        onChange={(value) => validateInput(value)} //onChange it should do validateInput function(which \r\n                        style={{width: '100%'}}                       // is to emit sendCode with our aceEditor value)\r\n                            setOptions={{\r\n                                enableLiveAutocompletion: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\" style={{marginTop: 20, marginLeft: '100px'}}>\r\n                    <div className=\"card p-3\">\r\n                        <h5 style={{textAlign: 'center'}}>Notifications</h5>\r\n\r\n                        <div className=\"scroll\">\r\n                            <Notifications notifications={notifications} name={name} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card p-3\" style={{marginTop: '20px'}}>\r\n                        <h5 style={{textAlign: 'center'}}>Members</h5>\r\n                        <div className=\"scroll\">\r\n                            <Members users={users}/>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <a className=\"btn btn-danger\" href=\"/\">Leave</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n\r\n    const errorOccured = () => {\r\n        return (\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\r\n                <div className=\"alert alert-danger\" role=\"alert\" style={{width: '500px', marginTop: '20px'}}>\r\n                    <h4 className=\"alert-heading\">Error!</h4>\r\n                    <p>An error occured, try again.</p>\r\n                    <hr/>\r\n                    <p className=\"mb-0\">{flag.msg}.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const loadingScreen = () => {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign: \"center\", marginTop: '300px'}}>\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                </h2>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    \r\n    return (\r\n        <>{ loading === true ? loadingScreen() : flag.error === true ? errorOccured() : editor() }</>\r\n    );\r\n};\r\n\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}