{"version":3,"sources":["components/Chat/Chat.js","components/Members/Members.js","components/Notification/Notification.js","components/Notifications/Notifications.js","components/InfoBar/InfoBar.js","components/JoinRoom/JoinRoom.js","components/CreateRoom/CreateRoom.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["socket","Members","users","className","map","name","Notification","notification","text","user","sentByCurrentUser","trimName","trim","toLowerCase","aria-current","ReactEmoji","emojify","Notifications","notifications","i","InfoBar","room","lastedit","Chat","data","useState","setName","setRoom","setUsers","setNotifications","error","msg","flag","setFlag","code","setCode","setLastEdit","loading","setLoading","ENDPOINT","useEffect","create","io","emit","on","message","setTimeout","window","location","href","style","textAlign","marginTop","role","display","justifyContent","alignItems","height","width","class","mode","theme","value","onChange","validateInput","setOptions","enableLiveAutocompletion","marginLeft","JoinRoom","isData","setIsdata","aria-label","type","placeholder","e","target","onClick","preventDefault","CreateRoom","randomRoom","length","result","characters","charLength","push","charAt","Math","floor","random","join","Home","createroom","setCreateRoom","joinroom","setJoinRoom","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9907f7f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport AceEditor from \"react-ace\";\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nimport \"ace-builds/src-noconflict/snippets/javascript\";\r\n\r\nimport Members from '../Members/Members';\r\nimport Notifications from '../Notifications/Notifications';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = (data) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState([]);\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [flag, setFlag]= useState({error: false, msg: ''});\r\n    const [code, setCode] = useState('');\r\n    const [lastedit, setLastEdit] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const ENDPOINT =  'https://may-codeditor3.herokuapp.com/' //'http://localhost:5000/';\r\n\r\n    //Component did mount, destructure data/args from reate and join room component\r\n    //Do socket.io to create and join, accordingly\r\n\r\n    useEffect(() => {\r\n        const {name, room, create} = data;\r\n\r\n        socket = io(ENDPOINT);\r\n\r\n        setRoom(room);\r\n        setName(name);\r\n\r\n        if(create){\r\n            //perform create function specified in socket.io for args user and error\r\n            socket.emit('create', { name, room }, (error) => {\r\n                setLoading(false); \r\n                if(error) {\r\n                    setFlag({...flag, error: true, msg: error});\r\n                }\r\n            });\r\n        }\r\n        \r\n        else{\r\n            socket.emit('join', { name, room }, (error) => {\r\n                setLoading(false);\r\n                if(error) { \r\n                  setFlag({...flag, error: true, msg: error});\r\n                }\r\n            });\r\n        }\r\n        \r\n    }, [ENDPOINT, data]);   //if endpoint is  reloaded, do useEffect \r\n\r\n    //Concatenation; set notification and spread in the array, also add the notification from socket.io \r\n    useEffect(() => {\r\n        socket.on('notification', notification => {\r\n            setNotifications(notifications => [ ...notifications, notification ]);\r\n        });\r\n\r\n        //perform the emit codeMessage from our socket.io, the we are setting code and lastedit\r\n        socket.on('codeMessage', message => {\r\n            setCode(message.text);\r\n            setLastEdit(message.user);\r\n        });\r\n        \r\n        //perform roomData function as in socket.io and destructure data to select only 'users' and set into the users array\r\n        socket.on(\"roomData\", ({users}) => {\r\n            setUsers(users);\r\n        });\r\n    }, []);\r\n\r\n    //responsible for passing change in contents of editor; onChange\r\n    const validateInput = (value) => {\r\n        socket.emit('sendCode', value);\r\n    }\r\n\r\n    if(flag.error == true){\r\n        setTimeout(()=> {\r\n            window.location.href='/';\r\n        }, 1000);\r\n    }\r\n\r\n\r\n\r\n    const editor = () => {\r\n        return (\r\n        <div className=\"container\" >\r\n            <div class=\"row\">\r\n                <div className=\"col\" style={{marginTop: 20}}>\r\n                    <div className=\"card p-3 logincard\" style={{width: '35rem'}}>\r\n                        <InfoBar room={room} lastedit={lastedit} />\r\n                        <AceEditor mode=\"javascript\" theme=\"monokai\" value={code} \r\n                        onChange={(value) => validateInput(value)} //onChange it should do validateInput function(which is to emit sendCode with our aceEditor value)\r\n                        style={{width: '100%'}}\r\n                            setOptions={{\r\n                                enableLiveAutocompletion: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\" style={{marginTop: 20, marginLeft: '100px'}}>\r\n                    <div className=\"card p-3\">\r\n                        <h5 style={{textAlign: 'center'}}>Notifications</h5>\r\n\r\n                        <div className=\"scroll\">\r\n                            <Notifications notifications={notifications} name={name} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card p-3\" style={{marginTop: '20px'}}>\r\n                        <h5 style={{textAlign: 'center'}}>Members</h5>\r\n                        <div className=\"scroll\">\r\n                            <Members users={users}/>\r\n                        </div>\r\n                        <br/><br/>\r\n                        <a className=\"btn btn-danger\" href=\"/\">Leave</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    };\r\n\r\n    const errorOccured = () => {\r\n        return (\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '100vh'}}>\r\n                <div className=\"alert alert-danger\" role=\"alert\" style={{width: '500px', marginTop: '20px'}}>\r\n                    <h4 className=\"alert-heading\">Error!</h4>\r\n                    <p>An error occured, try again.</p>\r\n                    <hr/>\r\n                    <p className=\"mb-0\">{flag.msg}.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const loadingScreen = () => {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign: \"center\", marginTop: '300px'}}>\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                </h2>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    \r\n    return (\r\n        <>{ loading === true ? loadingScreen() : flag.error === true ? errorOccured() : editor() }</>\r\n    );\r\n};\r\n\r\n\r\nexport default Chat;","import React from 'react';\r\n\r\nconst Members = ({ users }) => {\r\n\r\n    return(\r\n        <div className=\"members\">\r\n            {\r\n                users\r\n                ?(\r\n                    <div>\r\n                        <ul className=\"list-group list-group-numbered\">\r\n                            {users.map(({name}) => (\r\n                                <li className=\"list-group-item\" key={name}>{name}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                )\r\n                : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n  \r\nexport default Members;","import React from 'react';\r\nimport ReactEmoji from 'react-emoji';\r\n\r\nconst Notification = ({ notification: {text, user}, name }) => {\r\n    let sentByCurrentUser = false;\r\n\r\n    const trimName = name.trim().toLowerCase();\r\n\r\n    if(user === trimName) {  //if user equals to name that user inputs set whatever \r\n        //is sent by that user to true so that it does the true section in conditional rendering below\r\n        sentByCurrentUser = true;\r\n    }\r\n\r\n    return (\r\n        sentByCurrentUser\r\n        ?(            \r\n            <div className=\"list-group\">\r\n                <a className=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                    <p className=\"mb-1\">{ReactEmoji.emojify(text)}</p>\r\n                    <small>{trimName}</small> \r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n        :(\r\n            <div className=\"list-group\">\r\n                <a className=\"list-group-item list-group-item-action\" aria-current=\"true\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                    <p className=\"mb-1\">{ReactEmoji.emojify(text)}</p>\r\n                    <small>{user}</small>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Notifications = ({notifications, name}) => {\r\n    return(\r\n        <>\r\n            {notifications.map((notification, i) => <div key={i}><Notification notification={notification} name={name} /></div>)}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport './InfoBar.css';\r\n\r\nconst InfoBar = ({room, lastedit}) => {\r\n    return (\r\n        <div className=\"infoBar\">\r\n            <div className=\"leftInnerContainer\">\r\n                <h5>Room name: <b>{room}</b></h5>\r\n            </div>\r\n            <div className=\"rightInnerContainer\">\r\n                Last edit: <h5>{lastedit ? lastedit : '' }</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBar;","import React, { useState } from 'react';\r\nimport Chat from '../Chat/Chat';\r\n\r\nconst JoinRoom = () => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [isData, setIsdata] = useState(false);\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"col\" style={{marginTop: 150}}>\r\n          <div>\r\n              <h1>Welcome to Insta Meet <span role=\"img\" aria-label=\"emoji\">💬</span></h1>\r\n              <h2>Created by and for People <span role=\"img\" aria-label=\"emoji\">❤️</span></h2>\r\n              <h2>Try it out right now! <span role=\"img\" aria-label=\"emoji\">⬅️</span></h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\" style={{marginTop: 100}}>\r\n          <div className=\"card p-3 logincard\" style={{width: '30rem'}}>\r\n              <p className=\"text-center\">JOIN A ROOM</p>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-3\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange= {(e) => setName(e.target.value)} />\r\n                </div>\r\n                <div className=\"mb-5\">\r\n                    <label className=\"form-label\">Room Name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Room Name\" onChange= {(e) => setRoom(e.target.value)}/>\r\n                </div>\r\n                <div className=\"d-grid gap-2\">\r\n                    <button className=\"btn btn-primary\" onClick= {(e)=> (!name || !room) ? e.preventDefault() :  setIsdata(true) }>Proceed</button>\r\n                </div>\r\n                <div style={{textAlign: 'center', marginTop: '2px'}}>\r\n                  <button className=\"btn btn-link\" onClick={() =>  window.location.href='/'}>Home</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"container\" >\r\n        <div class=\"row\">\r\n          { isData === false ? loginForm() : <Chat room={room} name={name}/>}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default JoinRoom;","import React, { useState } from 'react';\r\nimport Chat from '../Chat/Chat';\r\n\r\nconst CreateRoom = () => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [isData, setIsdata] = useState(false);\r\n\r\n  //GENERATION OF ROOM NAME\r\n  const randomRoom = (length) => {\r\n    var result = [];\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charLength = characters.length;\r\n\r\n    //LOOP THROUGH LENGTH OF CHARACTERS HWEVER MANY TIMES HAS BEEN SPECIFIED LATER ON IN PROG AND \r\n    //populate array with characters\r\n    for( var i = 0; i < length; i++){\r\n        result.push(characters.charAt(Math.floor(Math.random()*charLength)));\r\n    };\r\n     //populateresult array with no space, to form room name\r\n    return result.join('');\r\n  };\r\n\r\n  const loginForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"col\" style={{marginTop: 150}}>\r\n          <div>\r\n              <h1>Welcome to Insta Meet <span role=\"img\" aria-label=\"emoji\">💬</span></h1>\r\n              <h2>Created by and for People <span role=\"img\" aria-label=\"emoji\">❤️</span></h2>\r\n              <h2>Try it out right now! <span role=\"img\" aria-label=\"emoji\">⬅️</span></h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"col\" style={{marginTop: 100}}>\r\n          <div className=\"card p-3 logincard\" style={{width: '30rem'}}>\r\n              <p className=\"text-center\">CREATE A ROOM</p>\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"mb-5\">\r\n                    <label  className=\"form-label\">Username</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange= {(e) => setName(e.target.value)} />\r\n                </div>\r\n                <p>Room Name will be Generated Automatically</p>\r\n                <div className=\"d-grid gap-2\">\r\n                    {/* On the user clicking Proceed, check if no name or generated room name exist, dont load room page, else set join to true */}\r\n                    <button className=\"btn btn-primary\" onClick= {(e)=> (!name || !randomRoom(7)) ? e.preventDefault() :  setIsdata(true) }>Proceed</button>\r\n                </div>\r\n                <div style={{textAlign: 'center', marginTop: '2px'}}>\r\n                  {/* reload page on onclick */}\r\n                  <button className=\"btn btn-link\" onClick={() =>  window.location.href='/'}>Home</button>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n    return (\r\n\r\n      <div className=\"container\" >\r\n        <div class=\"row\">\r\n          {/* Component is originally set to false by default and displays loginForm to create room \r\n          else, if set to true, pass room name (automatically gen), username, and create ststus (of true) to diff from join  */}\r\n          { isData === false ? loginForm() : <Chat room={randomRoom(7)} name={name} create={true}/>}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CreateRoom;","import React, { useState } from \"react\";\r\nimport JoinRoom from '../JoinRoom/JoinRoom';\r\nimport CreateRoom from '../CreateRoom/CreateRoom';\r\n\r\nconst Home = () => {\r\n    const [createroom, setCreateRoom] = useState(false);\r\n    const [joinroom, setJoinRoom] = useState(false);\r\n    \r\n    const homeForm = () =>{   \r\n        return (\r\n            <>\r\n                <div className=\"col\" style={{marginTop: 150}}>\r\n                    <div>\r\n                        <h1>Welcome to Live Code Editor <span role=\"img\" aria-label=\"emoji\">💬</span></h1>\r\n                        <h2>Created by and for People <span role=\"img\" aria-label=\"emoji\">❤️</span></h2>\r\n                        <h2>Try it out right now! <span role=\"img\" aria-label=\"emoji\">⬅️</span></h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col\" style={{marginTop: 250}}>\r\n                    <div className=\"card p-3 logincard\" style={{width: '15rem', marginLeft:200}}>\r\n                        <p className=\"text-center\"><button className=\"btn btn-primary\" style={{width: '10rem'}} onClick= {()=> setCreateRoom(true) }>Create Room</button></p>\r\n                        <p className=\"text-center\"><button className=\"btn btn-primary\" style={{width: '10rem'}} onClick= {()=> setJoinRoom(true) }>Join Room</button></p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" >\r\n                <div class=\"row\">\r\n                { joinroom === false && createroom === false ? homeForm() : joinroom === true ? <JoinRoom/> : <CreateRoom/>}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Home;","import './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\nimport Home from './components/Home/Home'\n\nconst App = () => {\n  return (\n    <>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n        </Switch>\n      </BrowserRouter>\n    </>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}